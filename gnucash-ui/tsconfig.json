{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "skipDefaultLibCheck": true,
    "strictFunctionTypes": true,
    "extendedDiagnostics": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts",
    "__tests__/combine-results.test.ts",
    "jest.setup.js",
    "src/app/projects/html-extractor/page.mdx",
    "prisma/enum-generator.mts",
    "custom.d.ts",
    "environment.d.ts"
  ],
  "types": [
    // Other types...
    // This allows Serwist to type `window.serwist`.
    "@serwist/next/typings"
  ],
  "lib": [
    // Other libs...
    // Add this! Doing so adds WebWorker and ServiceWorker types to the global.
    "webworker"
  ],
  "exclude": ["node_modules", "public/sw.js"],
  "ts-node": {
    "compilerOptions": {
      "module": "NodeNext",
      "moduleResolution": "NodeNext"
    }
  }
}

